mixin content
  section.title.inverse(data-background='#16a086')
    .logos
      img(src='deps/uaic.png')
      img(src='deps/ml-square.svg')
      img(src='deps/fii.png')
    div: h1 Multilatex
    div: h2 collaborative web editor for LaTeX
    div: h2.author Paul Nechifor
    .sub-info
      p Coordinatoor:
      p conf. dr. Sabin-Corneliu Buraga
      p.left
        a(href='http://www.infoiasi.ro/bin/Main/') FII
      p.right 2 July 2014
    p.main-links
      a(href='/') Home
      = ' • '
      a(href='/blog') Blog
      = ' • '
      a(href='/projects') Projects
      = ' • '
      a(href='https://twitter.com/PaulNechifor') Twitter
  section
    h2 Overview
    ul
      li LaTeX
      li problems
      li requirements
      li design
      li implementation
      li features
  section
    h2 LaTeX
    ul
      li a document preparation language based on the TeX typesetting language
      li separates content from presentation
      li widespread in academia
  section
    h2 Power of plain text
    ul
      li universally editable
      li easy to version control
      li a language is more expressive than editing visual representations
      li easy abstractions
  section
    h2 Problems
    ul
      li non-interactive compilation
      li may require multiple compilations
      li large package base
  section.title.inverse.dark-inverse(data-background='url(deps/tty.jpg)', data-background-size='cover')
    h2 When TeX was created, TTYs were still in common use.
    h2 How would it be reimagined?
  section
    h2 Requirements
    ul
      li collaborative
      li no installations (web-based)
      li safe (auto-saving)
      li track versions
  section.title.negative.inverse(data-background='url(deps/blog-design.png)', data-background-size='cover')
    h2 Started the design on the blog.
  section
    h2 Stack
    ul
      li no proprietary technology
      li: p using own stack
        ul
          li remove dependency on others
          li best way to learn
  section
    h2 Tooling
    table.block-table.blue(style='width:300px')
      tr: td Git
      tr: td Gulp
      tr: td Vagrant
      tr: td Bower
  section
    pre: code.go.
      $ gulp && gulp dev-deploy && gulp dev-log

      $ gulp --production && gulp dev-deploy && gulp dev-log
  section
    pre.small-pre: code.ruby.
        Vagrant.configure("2") do |config|
          config.vm.box = "hashicorp/precise64"

          (1..nMachines).each do |i|
            vmname = "machine#{i}"
            config.vm.define vmname.to_sym do |machine|
              machine.vm.host_name = vmname
              machine.vm.network "private_network", ip: "10.10.10.\#{10+i}"
              machine.vm.provider "virtualbox" do |v|
                v.name = vmname
                v.memory = 1024
                v.cpus = 2
              end
              machine.vm.provision "shell", path: "scripts/provision.sh"
            end
          end

          if File.file?('../private/client_id')
            vmname = "machine-do"
            config.vm.define vmname.to_sym do |machine|
              machine.vm.host_name = vmname
              machine.vm.provision "shell", path: "scripts/provision.sh"
              config.vm.provider :digital_ocean do |provider, override|
                override.ssh.private_key_path = '~/.ssh/id_rsa'
                override.vm.box = 'digital_ocean'
                override.vm.box_url = 'https://github.com/smdahlen/vagrant-digitalocean/raw/master/box/digital_ocean.box'
                provider.client_id = File.read('../private/client_id').strip
                provider.api_key = File.read('../private/api_key').strip
                provider.size = '1GB'
                provider.image = 'Ubuntu 12.04.4 x64'
                provider.region = 'Amsterdam 2'
              end
            end
          end
        end
  section.title.negative.inverse(data-background='url(deps/provis.png)', data-background-size='cover')
  section
    pre: code.big-pre.go.
      vagrant plugin install vagrant-digitalocean
      vagrant up --provider=digital_ocean
  section
    h2 Back-end
    table.block-table.red(style='width:600px')
      tr
        td Node.js
        td Upstart
      tr
        td TeX Live
        td MongoDB
      tr
        td Express
        td Ubuntu
      tr
        td Share.js
  section
    h2 Transformation
    p Higher level languages for JS+HTML+CSS.
    table.block-table.green(style='width:300px')
      tr: td Browserify
      tr: td CoffeeScript
      tr: td Jade
      tr: td Stylus
  section.title.negative.inverse(data-background='url(deps/sta.png)', data-background-size='cover')
  section.title.negative.inverse(data-background='url(deps/stc.png)', data-background-size='cover')
  section.title.negative.inverse(data-background='url(deps/stb.png)', data-background-size='cover')
  section.title.negative.inverse(data-background='url(deps/std.png)', data-background-size='cover')
  section
    h2 Front-end
    p Installed with Bower.
    table.block-table.red(style='width:300px')
      tr: td Ace
      tr: td PDF.js
      tr: td jQuery
      tr: td Backbone.js
      tr: td Bootstrap
  section
    h2 Editor
    ul
      li Share.js for document collaboration.
      li Own WebSocket protocol for all other communication.
  section
    iframe(class="youtube-player", type="text/html", width="800", height="600", src="http://www.youtube.com/embed/QS_WeYp1v94", allowfullscreen, frameborder="0")
  section
    h2 Collaboration
  section
    iframe(class="youtube-player", type="text/html", width="800", height="600", src="http://www.youtube.com/embed/b6Q-xKQQXrY", allowfullscreen, frameborder="0")
  section.title.inverse(data-background='#16a086')
    div: h1 The End
    div: h2 Questions?

doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    title Multilatex
    meta(http-equiv='x-ua-compatible', content='ie=edge')
    meta(name='description', content='Presentation on my collaborative web editor for LaTeX called Multilatex.')
    link(rel='apple-touch-icon', href='/favicon152.png')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black-translucent')
    meta(name='viewport', content='width=device-width,initial-scale=1')
    link(rel='stylesheet', href='reveal/reveal.min.css')
    link(rel='stylesheet', href='style.css')
  body
    .reveal
      .slides
        +content()
    script(src='reveal/head.min.js')
    script(src='reveal/reveal.min.js')
    script(src='js/highlight.js')
    script(src='script.js')
